<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <contextName>logback</contextName>
    <!-- 日志级别 -->
    <springProperty scope="context" name="logLevel" source="log.level"/>
    <!-- 日志地址，定义log 文件的 home 目录 tomcat下  -->
    <springProperty scope="context" name="logPath" source="log.path"/>
    <property name="LOG_HOME" value="logs/"></property>
    <!-- 最大保存时间 -->
    <property name="maxHistory" value="30"/>
    <!-- 异步缓冲队列的深度,该值会影响性能.默认值为256 -->
    <property name="queueSize" value="512"></property>

    <!--console out -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- %.-1level 只显示信息级别的首字母,%-5level 左对齐显示信息级别全称 -->
            <!--<Pattern>[%date{yyyy-MM-dd HH:mm:ss}] [%-5level] &#45;&#45;%mdc{client} %msg%n</Pattern>-->
            <!--<Pattern>%d{yyyy/MM/dd-HH:mm:ss} %level [%thread] %caller{1} - %msg%n</Pattern> -->
            <Pattern>%date{yyyy-MM-dd HH:mm:ss:SSS} {%thread} %-5p [%c] [%F:%L] - %X{traceId} - %msg%n</Pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <!--trace log-->
    <appender name="TRACE_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <file>${LOG_HOME}/trace.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>logs/trace.%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <layout>
            <pattern>%date{yyyy-MM-dd HH:mm:ss:SSS} {%thread} %-5p [%c] [%F:%L] - %X{traceId} - %msg%n</pattern>
        </layout>
        <!--  <filter class="ch.qos.logback.classic.filter.LevelFilter">
             <level>TRACE</level>
             <onMatch>ACCEPT</onMatch>
             <onMismatch>DENY</onMismatch>
            </filter>  -->
    </appender>
    <!--info log-->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <file>${LOG_HOME}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>logs/info.%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <layout>
            <pattern>%date{yyyy-MM-dd HH:mm:ss:SSS} {%thread} %-5p [%c] [%F:%L] - %X{traceId} - %msg%n</pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--debug log-->
    <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <file>${LOG_HOME}/debug.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>logs/debug.%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <layout>
            <pattern>%date{yyyy-MM-dd HH:mm:ss:SSS} {%thread} %-5p [%c] [%F:%L] - %X{traceId} - %msg%n</pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--warn log -->
    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <file>${LOG_HOME}/warn.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>logs/warn.%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <layout>
            <pattern>%date{yyyy-MM-dd HH:mm:ss:SSS} {%thread} %-5p [%c] [%F:%L] - %X{traceId} - %msg%n</pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--error log-->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <file>${LOG_HOME}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>logs/error.%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
        </rollingPolicy>
        <layout>
            <pattern>%date{yyyy-MM-dd HH:mm:ss:SSS} {%thread} %-5p [%c] [%F:%L] - %X{traceId} - %msg%n</pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--异步记录日志-->
    <appender name="ASYNC_LOG_DEBUG" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${queueSize}</queueSize>
        <appender-ref ref="DEBUG_FILE"/>
    </appender>
    <appender name="ASYNC_LOG_INFO" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${queueSize}</queueSize>
        <appender-ref ref="INFO_FILE"/>
    </appender>
    <appender name="ASYNC_LOG_WARN" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${queueSize}</queueSize>
        <appender-ref ref="WARN_FILE"/>
    </appender>
    <appender name="ASYNC_LOG_ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${queueSize}</queueSize>
        <appender-ref ref="ERROR_FILE"/>
    </appender>
    <appender name="ASYNC_LOG_TRACE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>${queueSize}</queueSize>
        <appender-ref ref="TRACE_FILE"/>
    </appender>

    <!-- show parameters for hibernate sql 专为 Hibernate 定制 -->
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE" />
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor" level="DEBUG" />
    <logger name="org.hibernate.SQL" level="DEBUG" />
    <logger name="org.hibernate.engine.QueryParameters" level="DEBUG" />
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG" />

    <!--myibatis log configure-->
    <logger name="com.apache.ibatis" level="TRACE"/>
    <logger name="java.sql.Connection" level="DEBUG"/>
    <logger name="java.sql.Statement" level="DEBUG"/>
    <logger name="java.sql.PreparedStatement" level="DEBUG"/>

    <logger name="com.doctorwork.qiedoctor.module.*.dao" level="DEBUG" additivity="false">
        <appender-ref ref="ASYNC_LOG_DEBUG"/>
    </logger>

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <!--<appender-ref ref="ASYNC_LOG_DEBUG"/>-->
        <appender-ref ref="ASYNC_LOG_INFO"/>
        <!--<appender-ref ref="ASYNC_LOG_WARN"/>-->
        <appender-ref ref="ASYNC_LOG_ERROR"/>
        <!--<appender-ref ref="ASYNC_LOG_TRACE"/>-->
    </root>
</configuration>